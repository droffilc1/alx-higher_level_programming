The ``2-matrix_divided`` module
================================

Using ``matrix_divided``
-------------------------

Test cases
-----------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix by 3:

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by 0:

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Passing an empty matrix

>>> matrix_divided([], 5)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a tuple as a matrix

>>> matrix_divided((5, 10, 15), 5)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix of rows with different size:

>>> matrix_divided([[20, 30], [2, 4, 8], [2]], 3)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

Passing div as a list

>>> matrix_divided([[1, 3], [5, 7]], [3])
Traceback (most recent call last):
	...
TypeError: div must be a number

Passing div as a string

>>> matrix_divided([[10, 50], [30, 20]], "10")
Traceback (most recent call last):
	...
TypeError: div must be a number

Dividing a matrix by a float number:

>>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
[[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]
